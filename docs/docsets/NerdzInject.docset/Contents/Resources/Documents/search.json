{"Classes/NerdzInject.html#/s:11NerdzInjectAAC6sharedABvpZ":{"name":"shared","abstract":"<p>SIngleton instance of a class</p>","parent_name":"NerdzInject"},"Classes/NerdzInject.html#/s:11NerdzInjectAAC8register6objectyx_tlF":{"name":"register(object:)","abstract":"<p>Register an object based on instance type</p>","parent_name":"NerdzInject"},"Classes/NerdzInject.html#/s:11NerdzInjectAAC8register6object3foryx_q_mtr0_lF":{"name":"register(object:for:)","abstract":"<p>Register an object for another  type","parent_name":"NerdzInject"},"Classes/NerdzInject.html#/s:11NerdzInjectAAC8register6object3foryx_SStlF":{"name":"register(object:for:)","abstract":"<p>Register an object that might be </p>","parent_name":"NerdzInject"},"Classes/NerdzInject.html#/s:11NerdzInjectAAC8register9singleton7closureySb_xyctlF":{"name":"register(singleton:closure:)","abstract":"<p>Lazy register of an instance based on instance type","parent_name":"NerdzInject"},"Classes/NerdzInject.html#/s:11NerdzInjectAAC8register9singleton3for7closureySb_q_mxyctr0_lF":{"name":"register(singleton:for:closure:)","abstract":"<p>Lazy register of an instance based on provided type","parent_name":"NerdzInject"},"Classes/NerdzInject.html#/s:11NerdzInjectAAC8register9singleton3for7closureySb_SSxyctlF":{"name":"register(singleton:for:closure:)","abstract":"<p>Lazy register of an instance based on provided identifier","parent_name":"NerdzInject"},"Classes/NerdzInject.html#/s:11NerdzInjectAAC7resolvexSgylF":{"name":"resolve()","abstract":"<p>Resoving an instance based on type</p>","parent_name":"NerdzInject"},"Classes/NerdzInject.html#/s:11NerdzInjectAAC7resolve2byxSgq_m_tr0_lF":{"name":"resolve(by:)","abstract":"<p>Resolving an instance based on provided type","parent_name":"NerdzInject"},"Classes/NerdzInject.html#/s:11NerdzInjectAAC7resolve2byxSgSS_tlF":{"name":"resolve(by:)","abstract":"<p>Resolving an instance based on provided identifier</p>","parent_name":"NerdzInject"},"Classes/NerdzInject.html#/s:11NerdzInjectAAC12forceResolvexylF":{"name":"forceResolve()","abstract":"<p>Force-resoving an instance based on type</p>","parent_name":"NerdzInject"},"Classes/NerdzInject.html#/s:11NerdzInjectAAC12forceResolve2byxq_m_tr0_lF":{"name":"forceResolve(by:)","abstract":"<p>Resolving an instance based on provided type","parent_name":"NerdzInject"},"Classes/NerdzInject.html#/s:11NerdzInjectAAC12forceResolve2byxSS_tlF":{"name":"forceResolve(by:)","abstract":"<p>Resolving an instance based on provided identifier</p>","parent_name":"NerdzInject"},"Classes/NerdzInject.html#/s:11NerdzInjectAAC6remove2bySbSS_tF":{"name":"remove(by:)","abstract":"<p>Removing registered instance if such exist</p>","parent_name":"NerdzInject"},"Classes/NerdzInject.html#/s:11NerdzInjectAAC6remove2bySbxm_tlF":{"name":"remove(by:)","abstract":"<p>Removing registered instance if such exist</p>","parent_name":"NerdzInject"},"Classes/ForceInject.html#/s:11NerdzInject05ForceB0C_13allowRegisterACyxGSS_Sbtcfc":{"name":"init(_:allowRegister:)","abstract":"<p>Initializing with identifier and information if wrapper <code>set</code> method needs to be active</p>","parent_name":"ForceInject"},"Classes/ForceInject.html#/s:11NerdzInject05ForceB0C_13allowRegisterACyxGqd__m_Sbtclufc":{"name":"init(_:allowRegister:)","abstract":"<p>Initializing with class type and information if wrapper <code>set</code> method needs to be active</p>","parent_name":"ForceInject"},"Classes/ForceInject.html#/s:11NerdzInject05ForceB0C13allowRegisterACyxGSb_tcfc":{"name":"init(allowRegister:)","abstract":"<p>Initializing with <code>T</code> type and information if wrapper <code>set</code> method needs to be active</p>","parent_name":"ForceInject"},"Classes/ForceInject.html#/s:11NerdzInject05ForceB0C12wrappedValuexvp":{"name":"wrappedValue","abstract":"<p>Wrapped value</p>","parent_name":"ForceInject"},"Classes/Inject.html#/s:11NerdzInject0B0C_13allowRegisterACyxGSS_Sbtcfc":{"name":"init(_:allowRegister:)","abstract":"<p>Initializing with identifier and information if wrapper <code>set</code> method needs to be active</p>","parent_name":"Inject"},"Classes/Inject.html#/s:11NerdzInject0B0C_13allowRegisterACyxGqd__m_Sbtclufc":{"name":"init(_:allowRegister:)","abstract":"<p>Initializing with class type and information if wrapper <code>set</code> method needs to be active</p>","parent_name":"Inject"},"Classes/Inject.html#/s:11NerdzInject0B0C13allowRegisterACyxGSb_tcfc":{"name":"init(allowRegister:)","abstract":"<p>Initializing with <code>T</code> type and information if wrapper <code>set</code> method needs to be active</p>","parent_name":"Inject"},"Classes/Inject.html#/s:11NerdzInject0B0C12wrappedValuexSgvp":{"name":"wrappedValue","abstract":"<p>Wrapped value</p>","parent_name":"Inject"},"Classes/Inject.html":{"name":"Inject","abstract":"<p>Property wrapper that automatically resolve instance if such exist</p>"},"Classes/ForceInject.html":{"name":"ForceInject","abstract":"<p>Property wrapper that automatically force-resolving instance</p>"},"Classes/NerdzInject.html":{"name":"NerdzInject","abstract":"<p>A class that registers and resolve all the dependencies</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"}}